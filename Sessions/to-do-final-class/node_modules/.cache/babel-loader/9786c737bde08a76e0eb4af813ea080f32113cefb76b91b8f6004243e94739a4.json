{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trium\\\\Desktop\\\\future-minds-academy\\\\Sessions\\\\to-do-final-class\\\\src\\\\components\\\\ToDoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoItem = ({\n  task,\n  index,\n  toggleCompleted,\n  updateTask\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState(task.task);\n  const [editedDate, setEditedDate] = useState(task.date);\n  const [editedTime, setEditedTime] = useState(task.time);\n  const [editedIsImportant, setEditedIsImportant] = useState(task.isImportant);\n  const [editedColor, setEditedColor] = useState(task.color);\n  const handleSave = () => {\n    updateTask(index, {\n      task: editedTask,\n      date: editedDate,\n      time: editedTime,\n      isImportant: editedIsImportant,\n      color: editedColor,\n      isCompleted: task.isCompleted\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      textDecoration: task.isCompleted ? 'line-through' : 'none',\n      color: task.color\n    },\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTask,\n        onChange: e => setEditedTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: editedDate,\n        onChange: e => setEditedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: editedTime,\n        onChange: e => setEditedTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Important\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: editedIsImportant,\n          onChange: e => setEditedIsImportant(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: editedColor,\n        onChange: e => setEditedColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [task.task, \" - \", task.date, \" \", task.time, task.isImportant && /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" (Important) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleCompleted(index),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoItem, \"YtE82wTNqjT/PFUNWCh+mTqBYK8=\");\n_c = ToDoItem;\nexport default ToDoItem;\nvar _c;\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCheck","faEdit","jsxDEV","_jsxDEV","ToDoItem","task","index","toggleCompleted","updateTask","_s","isEditing","setIsEditing","editedTask","setEditedTask","editedDate","setEditedDate","date","editedTime","setEditedTime","time","editedIsImportant","setEditedIsImportant","isImportant","editedColor","setEditedColor","color","handleSave","isCompleted","style","textDecoration","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/trium/Desktop/future-minds-academy/Sessions/to-do-final-class/src/components/ToDoItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst ToDoItem = ({ task, index, toggleCompleted, updateTask }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState(task.task);\n  const [editedDate, setEditedDate] = useState(task.date);\n  const [editedTime, setEditedTime] = useState(task.time);\n  const [editedIsImportant, setEditedIsImportant] = useState(task.isImportant);\n  const [editedColor, setEditedColor] = useState(task.color);\n\n  const handleSave = () => {\n    updateTask(index, {\n      task: editedTask,\n      date: editedDate,\n      time: editedTime,\n      isImportant: editedIsImportant,\n      color: editedColor,\n      isCompleted: task.isCompleted,\n    });\n    setIsEditing(false);\n  };\n\n  return (\n    <li style={{ textDecoration: task.isCompleted ? 'line-through' : 'none', color: task.color }}>\n      {isEditing ? (\n        <div>\n          <input \n            type=\"text\" \n            value={editedTask} \n            onChange={(e) => setEditedTask(e.target.value)} \n          />\n          <input \n            type=\"date\" \n            value={editedDate} \n            onChange={(e) => setEditedDate(e.target.value)} \n          />\n          <input \n            type=\"time\" \n            value={editedTime} \n            onChange={(e) => setEditedTime(e.target.value)} \n          />\n          <label>\n            Important\n            <input \n              type=\"checkbox\" \n              checked={editedIsImportant} \n              onChange={(e) => setEditedIsImportant(e.target.checked)} \n            />\n          </label>\n          <input \n            type=\"color\" \n            value={editedColor} \n            onChange={(e) => setEditedColor(e.target.value)} \n          />\n          <button onClick={handleSave}>Save</button>\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\n        </div>\n      ) : (\n        <div>\n          {task.task} - {task.date} {task.time}\n          {task.isImportant && <strong> (Important) </strong>}\n          <button onClick={() => toggleCompleted(index)}>\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n          <button onClick={() => setIsEditing(true)}>\n            <FontAwesomeIcon icon={faEdit} />\n          </button>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default ToDoItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}